//
//  Fine_Cube.cpp
//  ParticleGen_C++
//
//  Created by Administrator on 23/03/2017.
//  Copyright Â© 2017 Administrator. All rights reserved.
//

#include "Fine_Cube.hpp"

double xx[] =
    {
        -0.500000, -0.500000, -0.500000, -0.500000, -0.500000, -0.250000, -0.250000, -0.250000, -0.250000, -0.250000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.250000, 0.250000, 0.250000, 0.250000, 0.250000, 0.500000, 0.500000, 0.500000, 0.500000, 0.500000, -0.500000, -0.500000, -0.500000, -0.500000, -0.500000, -0.250000, -0.250000, -0.250000, -0.250000, -0.250000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.250000, 0.250000, 0.250000, 0.250000, 0.250000, 0.500000, 0.500000, 0.500000, 0.500000, 0.500000, -0.500000, -0.500000, -0.500000, -0.500000, -0.500000, -0.250000, -0.250000, -0.250000, -0.250000, -0.250000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.250000, 0.250000, 0.250000, 0.250000, 0.250000, 0.500000, 0.500000, 0.500000, 0.500000, 0.500000, -0.500000, -0.500000, -0.500000, -0.500000, -0.500000, -0.250000, -0.250000, -0.250000, -0.250000, -0.250000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.250000, 0.250000, 0.250000, 0.250000, 0.250000, 0.500000, 0.500000, 0.500000, 0.500000, 0.500000, 0.500000, 0.500000, 0.500000, 0.500000, 0.500000, 0.500000, 0.500000, 0.500000, 0.500000, 0.500000, 0.500000, 0.500000, 0.500000, 0.500000, 0.500000, 0.500000, 0.500000, 0.500000, 0.500000, 0.500000, 0.500000, 0.500000, 0.500000, 0.500000, 0.500000, -0.500000, -0.500000, -0.500000, -0.500000, -0.500000, -0.500000, -0.500000, -0.500000, -0.500000, -0.500000, -0.500000, -0.500000, -0.500000, -0.500000, -0.500000, -0.500000, -0.500000, -0.500000, -0.500000, -0.500000, -0.500000, -0.500000, -0.500000, -0.500000, -0.500000
    };
    
    double yy[] =
    {
        -0.500000, -0.250000, 0.000000, 0.250000, 0.500000, -0.500000, -0.250000, 0.000000, 0.250000, 0.500000, -0.500000, -0.250000, 0.000000, 0.250000, 0.500000, -0.500000, -0.250000, 0.000000, 0.250000, 0.500000, -0.500000, -0.250000, 0.000000, 0.250000, 0.500000, -0.500000, -0.250000, 0.000000, 0.250000, 0.500000, -0.500000, -0.250000, 0.000000, 0.250000, 0.500000, -0.500000, -0.250000, 0.000000, 0.250000, 0.500000, -0.500000, -0.250000, 0.000000, 0.250000, 0.500000, -0.500000, -0.250000, 0.000000, 0.250000, 0.500000, -0.500000, -0.500000, -0.500000, -0.500000, -0.500000, -0.500000, -0.500000, -0.500000, -0.500000, -0.500000, -0.500000, -0.500000, -0.500000, -0.500000, -0.500000, -0.500000, -0.500000, -0.500000, -0.500000, -0.500000, -0.500000, -0.500000, -0.500000, -0.500000, -0.500000, 0.500000, 0.500000, 0.500000, 0.500000, 0.500000, 0.500000, 0.500000, 0.500000, 0.500000, 0.500000, 0.500000, 0.500000, 0.500000, 0.500000, 0.500000, 0.500000, 0.500000, 0.500000, 0.500000, 0.500000, 0.500000, 0.500000, 0.500000, 0.500000, 0.500000, -0.500000, -0.250000, 0.000000, 0.250000, 0.500000, -0.500000, -0.250000, 0.000000, 0.250000, 0.500000, -0.500000, -0.250000, 0.000000, 0.250000, 0.500000, -0.500000, -0.250000, 0.000000, 0.250000, 0.500000, -0.500000, -0.250000, 0.000000, 0.250000, 0.500000, -0.500000, -0.250000, 0.000000, 0.250000, 0.500000, -0.500000, -0.250000, 0.000000, 0.250000, 0.500000, -0.500000, -0.250000, 0.000000, 0.250000, 0.500000, -0.500000, -0.250000, 0.000000, 0.250000, 0.500000, -0.500000, -0.250000, 0.000000, 0.250000, 0.500000
    
    };
    
    double zz[] =
    {

    };

    Vertex_Indices vert_ptrs[] =
    {
        {0, 5, 1}, {1, 5, 6}, {1, 6, 2}, {2, 6, 7}, {2, 7, 3}, {3, 7, 8}, {3, 8, 4}, {4, 8, 9}, {5, 10, 6}, {6, 10, 11}, {6, 11, 7}, {7, 11, 12}, {7, 12, 8}, {8, 12, 13}, {8, 13, 9}, {9, 13, 14}, {10, 15, 11}, {11, 15, 16}, {11, 16, 12}, {12, 16, 17}, {12, 17, 13}, {13, 17, 18}, {13, 18, 14}, {14, 18, 19}, {15, 20, 16}, {16, 20, 21}, {16, 21, 17}, {17, 21, 22}, {17, 22, 18}, {18, 22, 23}, {18, 23, 19}, {19, 23, 24}, {25, 30, 26}, {26, 30, 31}, {26, 31, 27}, {27, 31, 32}, {27, 32, 28}, {28, 32, 33}, {28, 33, 29}, {29, 33, 34}, {30, 35, 31}, {31, 35, 36}, {31, 36, 32}, {32, 36, 37}, {32, 37, 33}, {33, 37, 38}, {33, 38, 34}, {34, 38, 39}, {35, 40, 36}, {36, 40, 41}, {36, 41, 37}, {37, 41, 42}, {37, 42, 38}, {38, 42, 43}, {38, 43, 39}, {39, 43, 44}, {40, 45, 41}, {41, 45, 46}, {41, 46, 42}, {42, 46, 47}, {42, 47, 43}, {43, 47, 48}, {43, 48, 44}, {44, 48, 49}, {0, 5, 51}, {51, 5, 56}, {51, 56, 52}, {52, 56, 57}, {52, 57, 53}, {53, 57, 58}, {53, 58, 25}, {25, 58, 30}, {5, 10, 56}, {56, 10, 61}, {56, 61, 57}, {57, 61, 62}, {57, 62, 58}, {58, 62, 63}, {58, 63, 30}, {30, 63, 35}, {10, 15, 61}, {61, 15, 66}, {61, 66, 62}, {62, 66, 67}, {62, 67, 63}, {63, 67, 68}, {63, 68, 35}, {35, 68, 40}, {15, 20, 66}, {66, 20, 71}, {66, 71, 67}, {67, 71, 72}, {67, 72, 68}, {68, 72, 73}, {68, 73, 40}, {40, 73, 45}, {29, 34, 76}, {76, 34, 81}, {76, 81, 77}, {77, 81, 82}, {77, 82, 78}, {78, 82, 83}, {78, 83, 4}, {4, 83, 9}, {34, 39, 81}, {81, 39, 86}, {81, 86, 82}, {82, 86, 87}, {82, 87, 83}, {83, 87, 88}, {83, 88, 9}, {9, 88, 14}, {39, 44, 86}, {86, 44, 91}, {86, 91, 87}, {87, 91, 92}, {87, 92, 88}, {88, 92, 93}, {88, 93, 14}, {14, 93, 19}, {44, 49, 91}, {91, 49, 96}, {91, 96, 92}, {92, 96, 97}, {92, 97, 93}, {93, 97, 98}, {93, 98, 19}, {19, 98, 24}, {45, 73, 46}, {46, 73, 106}, {46, 106, 47}, {47, 106, 107}, {47, 107, 48}, {48, 107, 108}, {48, 108, 49}, {49, 108, 96}, {73, 72, 106}, {106, 72, 111}, {106, 111, 107}, {107, 111, 112}, {107, 112, 108}, {108, 112, 113}, {108, 113, 96}, {96, 113, 97}, {72, 71, 111}, {111, 71, 116}, {111, 116, 112}, {112, 116, 117}, {112, 117, 113}, {113, 117, 118}, {113, 118, 97}, {97, 118, 98}, {71, 20, 116}, {116, 20, 21}, {116, 21, 117}, {117, 21, 22}, {117, 22, 118}, {118, 22, 23}, {118, 23, 98}, {98, 23, 24}, {0, 51, 1}, {1, 51, 131}, {1, 131, 2}, {2, 131, 132}, {2, 132, 3}, {3, 132, 133}, {3, 133, 4}, {4, 133, 78}, {51, 52, 131}, {131, 52, 136}, {131, 136, 132}, {132, 136, 137}, {132, 137, 133}, {133, 137, 138}, {133, 138, 78}, {78, 138, 77}, {52, 53, 136}, {136, 53, 141}, {136, 141, 137}, {137, 141, 142}, {137, 142, 138}, {138, 142, 143}, {138, 143, 77}, {77, 143, 76}, {53, 25, 141}, {141, 25, 26}, {141, 26, 142}, {142, 26, 27}, {142, 27, 143}, {143, 27, 28}, {143, 28, 76}, {76, 28, 29}
    
    };



void Fine_Cube::CreateUnityCube(int res)
{
//    Plane            *  top;
//    Plane            *  bottom;
//    Plane            *  left;
//    Plane            *  right;
//    Plane            *  front;
//    Plane            *  back;
    

//    top     = new Plane(res);
//    top->MoveObject(0, 0, 1);
//    
////    corner_ver_num.push_back(0);
////    corner_ver_num.push_back(res-1);
////    corner_ver_num.push_back((res-1)*res);
////    corner_ver_num.push_back(res*res-1);
//    
//    bottom  = new Plane(res);
//    
//    left    = new Plane(res);
//    left->Rotate(90, 0, 0);
//    left->MoveObject(0, -0.5, 0.5);
//    
//    back    = new Plane(res);
//    back->Rotate(0, -90, 0);
//    back->MoveObject(-0.5, 0, 0.5);
//    
//    right   = new Plane(res);
//    right->Rotate(-90, 0, 0);
//    right->MoveObject(0, 0.5, 0.5);
//    
//    front   = new Plane(res);
//    front->Rotate(0, 90, 0);
//    front->MoveObject(0.5, 0, 0.5);
//    
//    // connect plane and merge near vertices
//    AddShape(bottom);
//    AddShape(top);
//    ConnectShape(left , 0.001);
//    ConnectShape(right, 0.001);
//    ConnectShape(front, 0.001);
//    ConnectShape(back , 0.001);
//    
//    
//    for (size_t i = 0; i<face_list.size(); i++)
//    {
//
//        printf("{%d, ",face_list[i].verts[0]);
//        printf("%d, ",face_list[i].verts[1]);
//        printf("%d}, ",face_list[i].verts[2]);
//    }
    
    double x[150],y[150],z[150];
    Vertex_Indices vert[192];
    
    size_t ver_num;
    size_t face_num;
    
    Unity_Cube_5(
        x,
        y,
        z,
        vert,
        & ver_num,
        & face_num);
    
    for (size_t i =0; i<ver_num; i++)
    {
        AddVertex(x[i], y[i], z[i]);
    }
    
    for (size_t i =0; i<face_num; i++)
    {
        AddFace('0', 3 , vert[i]);
    }

}

void Fine_Cube::Unity_Cube_5(
    double * x,
    double * y,
    double * z,
    Vertex_Indices * vert,
    size_t * ver_num,
    size_t * face_num
    )
{
    *ver_num     = 150;
    *face_num    = 192;
//
        
    for (size_t i =0; i<150; i++)
    {
        x[i] = xx[i];
        y[i] = yy[i];
        z[i] = zz[i];
    }
//
    for (size_t i =0; i<192; i++)
    {
        vert[i][0] = vert_ptrs[i][0];
        vert[i][1] = vert_ptrs[i][1];
        vert[i][2] = vert_ptrs[i][2];
    }

}

